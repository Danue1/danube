---
source: compiler/danubec_parse/src/tests/mod.rs
expression: node
---
Some(
    Krate {
        attributes: [],
        definitions: [
            Definition {
                attributes: [],
                visibility: Private,
                kind: Function {
                    name: Identifier {
                        name: "foo",
                    },
                    type_parameters: [],
                    parameters: [],
                    return_type: None,
                    type_bounds: [],
                    body: None,
                },
            },
            Definition {
                attributes: [],
                visibility: Private,
                kind: Function {
                    name: Identifier {
                        name: "bar",
                    },
                    type_parameters: [],
                    parameters: [],
                    return_type: None,
                    type_bounds: [],
                    body: Some(
                        [],
                    ),
                },
            },
            Definition {
                attributes: [],
                visibility: Private,
                kind: Function {
                    name: Identifier {
                        name: "baz",
                    },
                    type_parameters: [],
                    parameters: [
                        FunctionParameter {
                            attributes: [],
                            pattern: Path {
                                path: Path {
                                    segments: [
                                        PathSegment {
                                            kind: Identifier(
                                                Identifier {
                                                    name: "a",
                                                },
                                            ),
                                        },
                                    ],
                                },
                            },
                            type: Path {
                                path: Path {
                                    segments: [
                                        PathSegment {
                                            kind: Identifier(
                                                Identifier {
                                                    name: "i32",
                                                },
                                            ),
                                        },
                                    ],
                                },
                            },
                        },
                        FunctionParameter {
                            attributes: [],
                            pattern: Path {
                                path: Path {
                                    segments: [
                                        PathSegment {
                                            kind: Identifier(
                                                Identifier {
                                                    name: "b",
                                                },
                                            ),
                                        },
                                    ],
                                },
                            },
                            type: Path {
                                path: Path {
                                    segments: [
                                        PathSegment {
                                            kind: Identifier(
                                                Identifier {
                                                    name: "String",
                                                },
                                            ),
                                        },
                                    ],
                                },
                            },
                        },
                    ],
                    return_type: Some(
                        Tuple {
                            elements: [],
                        },
                    ),
                    type_bounds: [],
                    body: Some(
                        [
                            Expression {
                                value: Expression {
                                    kind: Tuple {
                                        elements: [
                                            Expression {
                                                kind: Path {
                                                    path: Path {
                                                        segments: [
                                                            PathSegment {
                                                                kind: Identifier(
                                                                    Identifier {
                                                                        name: "a",
                                                                    },
                                                                ),
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            Expression {
                                                kind: Path {
                                                    path: Path {
                                                        segments: [
                                                            PathSegment {
                                                                kind: Identifier(
                                                                    Identifier {
                                                                        name: "b",
                                                                    },
                                                                ),
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                },
                            },
                        ],
                    ),
                },
            },
        ],
        children: {},
    },
)
