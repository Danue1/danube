---
source: compiler/danubec_parse/src/tests/mod.rs
expression: node
---
Some(
    Krate {
        attributes: [],
        definitions: [
            Definition {
                attributes: [],
                visibility: Private,
                kind: Struct {
                    name: Identifier {
                        name: "Foo",
                    },
                    type_parameters: [],
                    type_bounds: [],
                    body: Unnamed(
                        [],
                    ),
                },
            },
            Definition {
                attributes: [],
                visibility: Private,
                kind: Struct {
                    name: Identifier {
                        name: "Bar",
                    },
                    type_parameters: [],
                    type_bounds: [],
                    body: Unnamed(
                        [
                            (
                                Private,
                                Tuple {
                                    elements: [],
                                },
                            ),
                        ],
                    ),
                },
            },
            Definition {
                attributes: [],
                visibility: Private,
                kind: Struct {
                    name: Identifier {
                        name: "Baz",
                    },
                    type_parameters: [],
                    type_bounds: [],
                    body: Unnamed(
                        [
                            (
                                Private,
                                Path {
                                    path: Path {
                                        segments: [
                                            PathSegment {
                                                kind: Identifier(
                                                    Identifier {
                                                        name: "i32",
                                                    },
                                                ),
                                            },
                                        ],
                                    },
                                },
                            ),
                            (
                                Private,
                                Path {
                                    path: Path {
                                        segments: [
                                            PathSegment {
                                                kind: Identifier(
                                                    Identifier {
                                                        name: "String",
                                                    },
                                                ),
                                            },
                                        ],
                                    },
                                },
                            ),
                        ],
                    ),
                },
            },
        ],
        children: {},
    },
)
