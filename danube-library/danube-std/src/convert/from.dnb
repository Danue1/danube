use crate::primitive::*;

pub trait From<T> {
  fn from(t: T) -> Self;
}

impl From<Bool> for Bool {
  #[native]
  fn from(t: Bool) -> Self = t;
}

impl From<Float> for Bool {
  #[native]
  fn from(t: Float) -> Self = t != 0;
}

impl From<Int> for Bool {
  #[native]
  fn from(t: Int) -> Self = t != 0;
}

impl From<Size> for Bool {
  #[native]
  fn from(t: Size) -> Self = t != 0;
}

impl From<String> for Bool {
  #[native]
  fn from(t: String) -> Self = t != "";
}

impl From<Uint> for Bool {
  #[native]
  fn from(t: Uint) -> Self = t != 0;
}

impl From<Usize> for Bool {
  #[native]
  fn from(t: Usize) -> Self = t != 0;
}
